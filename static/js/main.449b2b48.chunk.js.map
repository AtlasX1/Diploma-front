{"version":3,"sources":["redux/actions/testActions.js","redux/reducers/testReducer.js","redux/reducers/drugsReducer.js","redux/actions/drugsActions.js","redux/reducers/index.js","redux/api/index.js","config/base.js","redux/sagas/testSaga.js","redux/sagas/index.js","components/header/index.jsx","pages/allDrugs/table/index.jsx","pages/allDrugs/index.jsx","pages/getDrugs/index.jsx","pages/patients/index.jsx","pages/main/index.jsx","App.js","index.js"],"names":["testSuccess","data","type","initialState","testNameData","count","testReducer","state","action","error","drugs","isLoading","drugsReducer","tmp","push","rootReducer","combineReducers","api","testApi","a","getTestSaga","testSaga","call","put","takeLatest","saga","all","navButtons","name","link","Header","className","classnames","mobile","map","i","key","href","useRowStyles","makeStyles","root","borderBottom","Row","props","row","React","useState","open","setOpen","classes","Fragment","TableRow","TableCell","IconButton","aria-label","size","onClick","component","scope","align","activeSubstance","grams","style","whiteSpace","wordWrap","maxWidth","description","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","Box","margin","Typography","variant","gutterBottom","Table","TableHead","TableBody","specificsOfPatients","specific","CollapsibleTable","rowData","TableContainer","Paper","drugForm","id","AllDrugs","dispatch","useDispatch","addDrug","useCallback","addDrugRequest","drugsData","useSelector","setData","updateData","newData","propName","prevData","changeSpecificData","idx","prop","console","log","Grid","item","container","lg","justify","xs","md","TextField","label","value","onChange","e","target","multiline","rows","addNewSpecificData","height","patientForm","GetDrug","number","symptoms","disease","subDisease","patient","setPatient","updatePatientData","sm","onAdd","chip","onDelete","filter","Patients","Main","testRequest","App","sageMiddleware","createSagaMiddleware","store","createStore","reducer","applyMiddleware","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.449b2b48.chunk.js","sourcesContent":["export const TEST_REQUEST = \"TEST_REQUEST\";\r\nexport const TEST_SUCCESS = \"TEST_SUCCESS\";\r\nexport const TEST_ERROR = \"TEST_ERROR\";\r\n\r\nexport const testRequest = (data) => ({\r\n  type: TEST_REQUEST,\r\n  data,\r\n});\r\n\r\nexport const testSuccess = (data) => ({\r\n  type: TEST_SUCCESS,\r\n  data,\r\n});\r\n\r\nexport const testError = (error) => ({\r\n  type: TEST_ERROR,\r\n  error,\r\n});\r\n","import { TEST_REQUEST, TEST_SUCCESS, TEST_ERROR } from \"../actions/testActions\";\r\n\r\nconst initialState = {\r\n  data: {\r\n    testNameData: \"Test\",\r\n  },\r\n  count: 0,\r\n};\r\n\r\nconst testReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case TEST_REQUEST:\r\n      return {\r\n        ...state,\r\n        data: action.data,\r\n      };\r\n\r\n    case TEST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        data: action.data,\r\n      };\r\n\r\n    case TEST_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default testReducer;\r\n","import {\r\n  ADD_DRUG_REQUEST,\r\n  ADD_DRUG_SUCCESS,\r\n  ADD_DRUG_ERROR,\r\n} from \"../actions/drugsActions\";\r\n\r\nconst initialState = {\r\n  drugs: [],\r\n  isLoading: false,\r\n  error: \"\",\r\n};\r\n\r\nconst drugsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_DRUG_REQUEST:\r\n      const tmp = [...state.drugs];\r\n      tmp.push(action.data);\r\n      return {\r\n        ...state,\r\n        drugs: [...tmp],\r\n        isLoading: true,\r\n      };\r\n\r\n    case ADD_DRUG_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n      };\r\n\r\n    case ADD_DRUG_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        isLoading: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default drugsReducer;\r\n","export const ADD_DRUG_REQUEST = \"ADD_DRUG_REQUEST\";\r\nexport const ADD_DRUG_SUCCESS = \"ADD_DRUG_SUCCESS\";\r\nexport const ADD_DRUG_ERROR = \"ADD_DRUG_ERROR\";\r\n\r\nexport const addDrugRequest = (data) => ({\r\n  type: ADD_DRUG_REQUEST,\r\n  data,\r\n});\r\n\r\nexport const addDrugSuccess = () => ({\r\n  type: ADD_DRUG_SUCCESS,\r\n});\r\n\r\nexport const addDrugError = (error) => ({\r\n  type: ADD_DRUG_ERROR,\r\n  error,\r\n});\r\n","import { combineReducers } from \"redux\";\r\nimport testReducer from \"./testReducer\";\r\nimport drugsReducer from \"./drugsReducer\";\r\nconst rootReducer = combineReducers({ testReducer, drugsReducer });\r\nexport default rootReducer;\r\n","import axios from \"axios\";\r\nimport { BASE_API_URL } from \"../../config/base\";\r\n\r\nconst api = {\r\n  testApi: async (data) => ({ api: BASE_API_URL, data }),\r\n};\r\n\r\nexport default api;\r\n","export const BASE_API_URL = \"api\";\r\n","import { put, takeLatest, call } from \"redux-saga/effects\";\r\nimport { TEST_REQUEST } from \"../actions/testActions\";\r\nimport { testError, testSuccess } from \"../actions/testActions\";\r\nimport api from \"../api/index.js\";\r\n\r\nfunction* getTestSaga(action) {\r\n  try {\r\n    const data = yield call(api.testApi, action);\r\n    yield put(testSuccess(data));\r\n  } catch (error) {\r\n    yield testError(error);\r\n  }\r\n}\r\n\r\nfunction* testSaga() {\r\n  yield takeLatest(TEST_REQUEST, getTestSaga);\r\n}\r\n\r\nexport default testSaga;\r\n","import { all } from \"redux-saga/effects\";\r\nimport testSaga from \"./testSaga\";\r\nfunction* saga() {\r\n  yield all([testSaga()]);\r\n}\r\n\r\nexport default saga;\r\n","import React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport \"./style.scss\";\r\n\r\nconst navButtons = [\r\n  {\r\n    name: \"Підбір ліків\",\r\n    link: \"getDrug\",\r\n  },\r\n  {\r\n    name: \"Ліки\",\r\n    link: \"allDrugs\",\r\n  },\r\n\r\n  {\r\n    name: \"Пацієнти\",\r\n    link: \"patients\",\r\n  },\r\n];\r\n\r\nconst Header = () => {\r\n  const isMobile = false;\r\n  return (\r\n    <div className=\"header\">\r\n      <div className={classnames(\"name\", { mobile: isMobile })}>HealInfo</div>\r\n      <div className=\"buttons\">\r\n        {navButtons.map(({ name, link }, i) => (\r\n          <a key={link + i} className=\"headerButton\" href={`#${link}`}>\r\n            {name}\r\n          </a>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\r\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst useRowStyles = makeStyles({\r\n  root: {\r\n    \"& > *\": {\r\n      borderBottom: \"unset\",\r\n    },\r\n  },\r\n});\r\n\r\nfunction createData(name, activeSubstance, grams, description) {\r\n  return {\r\n    name,\r\n    activeSubstance,\r\n    grams,\r\n    description,\r\n    specificsOfPatients: [\r\n      {\r\n        name: \"2020-01-05\",\r\n        grams: \"11091700\",\r\n        description:\r\n          \"description description descriptiondescription description description description\",\r\n      },\r\n      { name: \"2020-01-05\", grams: \"11091700\", description: \"\" },\r\n    ],\r\n  };\r\n}\r\n\r\nfunction Row(props) {\r\n  const { row } = props;\r\n  const [open, setOpen] = React.useState(false);\r\n  const classes = useRowStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <TableRow className={classes.root}>\r\n        <TableCell>\r\n          <IconButton\r\n            aria-label=\"expand row\"\r\n            size=\"small\"\r\n            onClick={() => setOpen(!open)}\r\n          >\r\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n          </IconButton>\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {row.name}\r\n        </TableCell>\r\n        <TableCell align=\"right\">{row.activeSubstance}</TableCell>\r\n        <TableCell align=\"right\">{row.grams}</TableCell>\r\n        <TableCell\r\n          align=\"right\"\r\n          style={{\r\n            whiteSpace: \"normal\",\r\n            wordWrap: \"break-word\",\r\n            maxWidth: \"100px\",\r\n          }}\r\n        >\r\n          {row.description}\r\n        </TableCell>\r\n      </TableRow>\r\n      <TableRow>\r\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n            <Box margin={1}>\r\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                Особливості людини\r\n              </Typography>\r\n              <Table size=\"small\" aria-label=\"purchases\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Назва особливості</TableCell>\r\n                    <TableCell>Грами</TableCell>\r\n                    <TableCell align=\"right\">Опис</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {row.specificsOfPatients.map((specific, i) => (\r\n                    <TableRow key={specific.name + i}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {specific.name}\r\n                      </TableCell>\r\n                      <TableCell>{specific.grams}</TableCell>\r\n                      <TableCell\r\n                        align=\"right\"\r\n                        style={{\r\n                          whiteSpace: \"normal\",\r\n                          wordWrap: \"break-word\",\r\n                          maxWidth: \"100px\",\r\n                        }}\r\n                      >\r\n                        {specific.description}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </Box>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default function CollapsibleTable({ rowData }) {\r\n  const { drugs } = rowData;\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table aria-label=\"collapsible table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell />\r\n            <TableCell>Назва</TableCell>\r\n            <TableCell align=\"right\">Діюча речовина</TableCell>\r\n            <TableCell align=\"right\">Грами (g)</TableCell>\r\n            <TableCell align=\"right\">Опис</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {drugs.map((row, i) => (\r\n            <Row key={row.name + i} row={row} />\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React, { useState, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { addDrugRequest } from \"../../redux/actions/drugsActions\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Table from \"./table\";\r\nimport \"./styles.scss\";\r\n\r\nconst drugForm = [\r\n  { id: \"name\", name: \"Назва\" },\r\n  { id: \"activeSubstance\", name: \"Діюча речовина\" },\r\n  { id: \"grams\", name: \"Грам\" },\r\n];\r\n\r\nconst AllDrugs = (props) => {\r\n  const dispatch = useDispatch();\r\n  const addDrug = useCallback((data) => dispatch(addDrugRequest(data)), []);\r\n\r\n  const drugsData = useSelector((state) => state.drugsReducer);\r\n\r\n  const [data, setData] = useState({\r\n    name: \"\",\r\n    activeSubstance: \"\",\r\n    grams: \"\",\r\n    description: \"\",\r\n    specificsOfPatients: [],\r\n  });\r\n\r\n  const updateData = (newData, propName) =>\r\n    setData((prevData) => ({ ...prevData, [propName]: newData }));\r\n\r\n  const addNewSpecificData = () => {\r\n    const tmp = [...data.specificsOfPatients];\r\n    tmp.push({ name: \"\", grams: \"\", description: \"\" });\r\n    updateData(tmp, \"specificsOfPatients\");\r\n  };\r\n\r\n  const changeSpecificData = (idx, prop, newData) => {\r\n    console.log(idx, prop, newData);\r\n    const tmp = [...data.specificsOfPatients];\r\n    tmp[idx][prop] = newData;\r\n    updateData(tmp, \"specificsOfPatients\");\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      item\r\n      container\r\n      lg={12}\r\n      className=\"section allDrugs\"\r\n      id=\"allDrugs\"\r\n      justify=\"center\"\r\n    >\r\n      <Grid container item lg={6} xs={12} className=\"drugForm\" justify=\"center\">\r\n        <Grid container item md={8} justify=\"center\" className=\"content\">\r\n          {drugForm.map(({ id, name }, i) => (\r\n            <Grid container item xs={12} justify=\"center\" key={id + i}>\r\n              <TextField\r\n                id=\"standard-basic\"\r\n                label={name}\r\n                value={data[id]}\r\n                onChange={(e) => updateData(e.target.value, id)}\r\n              />\r\n            </Grid>\r\n          ))}\r\n          <Grid container item xs={12} justify=\"center\">\r\n            <TextField\r\n              id=\"standard-basic\"\r\n              label=\"Опис\"\r\n              value={data.description}\r\n              multiline\r\n              rows={4}\r\n              onChange={(e) => updateData(e.target.value, \"description\")}\r\n            />\r\n          </Grid>\r\n          <Grid container item xs={12} justify=\"center\">\r\n            Особливості людини\r\n          </Grid>\r\n          <div className=\"addNewSpecific\" onClick={() => addNewSpecificData()}>\r\n            Додати особливість\r\n          </div>\r\n          {data.specificsOfPatients.map((data, idx) => (\r\n            <Grid item container xs={12} lg={12} key={idx}>\r\n              <Grid container item lg={4} xs={12}>\r\n                <TextField\r\n                  id=\"standard-basic\"\r\n                  label=\"Назва особливості\"\r\n                  value={data.name}\r\n                  onChange={(e) =>\r\n                    changeSpecificData(idx, \"name\", e.target.value)\r\n                  }\r\n                />\r\n              </Grid>\r\n\r\n              <Grid container item lg={4} xs={12}>\r\n                <TextField\r\n                  id=\"standard-basic\"\r\n                  label=\"Грами\"\r\n                  value={data.grams}\r\n                  onChange={(e) =>\r\n                    changeSpecificData(idx, \"grams\", e.target.value)\r\n                  }\r\n                />\r\n              </Grid>\r\n\r\n              <Grid container item lg={4}>\r\n                <TextField\r\n                  id=\"standard-basic\"\r\n                  label=\"Опис\"\r\n                  value={data.description}\r\n                  multiline\r\n                  rows={4}\r\n                  onChange={(e) =>\r\n                    changeSpecificData(idx, \"description\", e.target.value)\r\n                  }\r\n                />\r\n              </Grid>\r\n              <div style={{ height: \"10px\" }}></div>\r\n            </Grid>\r\n          ))}\r\n          <Grid\r\n            container\r\n            item\r\n            className=\"addNewSpecific\"\r\n            lg={12}\r\n            onClick={() => {\r\n              addDrug(data);\r\n            }}\r\n          >\r\n            Додати\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container item lg={5} xs={12}>\r\n        <Table rowData={drugsData} />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default AllDrugs;\r\n","import React, { useState } from \"react\";\r\nimport classnames from \"classnames\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport ChipInput from \"material-ui-chip-input\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst patientForm = [\r\n  { id: \"symptoms\", name: \"Симптоми\" },\r\n  { id: \"disease\", name: \"Хвороба\" },\r\n  { id: \"subDisease\", name: \"Супутні захворювання\" },\r\n  { id: \"specificsOfPatients\", name: \"Особливості пацієнта\" },\r\n];\r\n\r\nconst GetDrug = (props) => {\r\n  const [patient, setPatient] = useState({\r\n    number: 0,\r\n    symptoms: [],\r\n    disease: [],\r\n    subDisease: [],\r\n    specificsOfPatients: [],\r\n  });\r\n\r\n  const updatePatientData = (newData, propName) =>\r\n    setPatient((prevData) => ({ ...prevData, [propName]: newData }));\r\n\r\n  return (\r\n    <Grid container item className=\"section getDrug\" id=\"getDrug\">\r\n      <Grid\r\n        container\r\n        item\r\n        className=\"setPatient\"\r\n        lg={6}\r\n        sm={12}\r\n        justify=\"center\"\r\n      >\r\n        <Grid container item className=\"patientForm\" xs={8} justify=\"center\">\r\n          <Grid container item className=\"field\" xs={12} justify=\"center\">\r\n            <TextField\r\n              id=\"standard-basic\"\r\n              label=\"Номер пацієнта\"\r\n              type=\"number\"\r\n              value={patient.number}\r\n              onChange={(e) => updatePatientData(e.target.value, \"number\")}\r\n            />\r\n          </Grid>\r\n          {patientForm.map(({ id, name }) => (\r\n            <Grid\r\n              container\r\n              item\r\n              key={id}\r\n              className=\"field\"\r\n              xs={12}\r\n              justify=\"center\"\r\n            >\r\n              <ChipInput\r\n                label={name}\r\n                value={patient[id]}\r\n                onAdd={(chip) => {\r\n                  const tmp = [...patient[id]];\r\n                  tmp.push(chip);\r\n                  updatePatientData(tmp, id);\r\n                }}\r\n                onDelete={(chip) => {\r\n                  const tmp = patient[id].filter((data) => data !== chip);\r\n                  updatePatientData(tmp, id);\r\n                }}\r\n              />\r\n            </Grid>\r\n          ))}\r\n          <div className=\"submitPatient\">Отримати ліки</div>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container item lg={6} sm={12} className=\"foundDrugs\">\r\n        Drugs\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default GetDrug;\r\n","import React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport \"./styles.scss\";\r\n\r\nconst Patients = (props) => {\r\n  return (\r\n    <div className=\"section\" id=\"patients\">\r\n      Patients\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Patients;\r\n","import React, { useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { testRequest } from \"../../redux/actions/testActions\";\r\n\r\nimport { Header } from \"../../components\";\r\nimport AllDrugs from \"../allDrugs\";\r\nimport GetDrugs from \"../getDrugs\";\r\nimport Patients from \"../patients\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst Main = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const func = useCallback((data) => dispatch(testRequest(data)), []);\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <GetDrugs />\r\n      <AllDrugs />\r\n      <Patients />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from \"react\";\n\nimport { Main } from \"./pages\";\n\nconst App = () => {\n  return (\n    <>\n      <Main />\n    </>\n  );\n};\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport reducer from \"./redux/reducers\";\nimport saga from \"./redux/sagas\";\nimport App from \"./App\";\nimport \"./index.scss\";\n\nconst sageMiddleware = createSagaMiddleware();\nconst store = createStore(reducer, applyMiddleware(sageMiddleware));\nsageMiddleware.run(saga);\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}