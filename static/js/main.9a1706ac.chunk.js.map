{"version":3,"sources":["redux/actions/testActions.js","redux/reducers/testReducer.js","redux/reducers/index.js","redux/api/index.js","config/base.js","redux/sagas/testSaga.js","redux/sagas/index.js","components/header/index.jsx","pages/allDrugs/index.jsx","pages/getDrugs/index.jsx","pages/patients/index.jsx","pages/main/index.jsx","App.js","index.js"],"names":["testSuccess","data","type","initialState","testNameData","count","testReducer","state","action","error","rootReducer","combineReducers","api","testApi","a","getTestSaga","testSaga","call","put","takeLatest","saga","all","navButtons","name","link","Header","className","classnames","mobile","map","key","href","drugForm","id","AllDrugs","props","useState","activeSubstance","grams","description","specificsOfPatients","setData","updateData","newData","propName","prevData","changeSpecificData","idx","prop","tmp","Grid","container","lg","justify","xs","md","item","TextField","label","value","onChange","e","target","multiline","rows","onClick","push","addNewSpecificData","style","height","patientForm","GetDrug","number","symptoms","disease","subDisease","patient","setPatient","updatePatientData","sm","onAdd","chip","onDelete","filter","Patients","Main","dispatch","useDispatch","useCallback","testRequest","App","sageMiddleware","createSagaMiddleware","store","createStore","reducer","applyMiddleware","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9a1706ac.chunk.js","sourcesContent":["export const TEST_REQUEST = \"TEST_REQUEST\";\r\nexport const TEST_SUCCESS = \"TEST_SUCCESS\";\r\nexport const TEST_ERROR = \"TEST_ERROR\";\r\n\r\nexport const testRequest = (data) => ({\r\n  type: TEST_REQUEST,\r\n  data,\r\n});\r\n\r\nexport const testSuccess = (data) => ({\r\n  type: TEST_SUCCESS,\r\n  data,\r\n});\r\n\r\nexport const testError = (error) => ({\r\n  type: TEST_ERROR,\r\n  error,\r\n});\r\n","import { TEST_REQUEST, TEST_SUCCESS, TEST_ERROR } from \"../actions/testActions\";\r\n\r\nconst initialState = {\r\n  data: {\r\n    testNameData: \"Test\",\r\n  },\r\n  count: 0,\r\n};\r\n\r\nconst testReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case TEST_REQUEST:\r\n      return {\r\n        ...state,\r\n        data: action.data,\r\n      };\r\n\r\n    case TEST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        data: action.data,\r\n      };\r\n\r\n    case TEST_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default testReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport testReducer from \"./testReducer\";\r\nconst rootReducer = combineReducers({ testReducer });\r\nexport default rootReducer;\r\n","import axios from \"axios\";\r\nimport { BASE_API_URL } from \"../../config/base\";\r\n\r\nconst api = {\r\n  testApi: async (data) => ({ api: BASE_API_URL, data }),\r\n};\r\n\r\nexport default api;\r\n","export const BASE_API_URL = \"api\";\r\n","import { put, takeLatest, call } from \"redux-saga/effects\";\r\nimport { TEST_REQUEST } from \"../actions/testActions\";\r\nimport { testError, testSuccess } from \"../actions/testActions\";\r\nimport api from \"../api/index.js\";\r\n\r\nfunction* getTestSaga(action) {\r\n  try {\r\n    const data = yield call(api.testApi, action);\r\n    yield put(testSuccess(data));\r\n  } catch (error) {\r\n    yield testError(error);\r\n  }\r\n}\r\n\r\nfunction* testSaga() {\r\n  yield takeLatest(TEST_REQUEST, getTestSaga);\r\n}\r\n\r\nexport default testSaga;\r\n","import { all } from \"redux-saga/effects\";\r\nimport testSaga from \"./testSaga\";\r\nfunction* saga() {\r\n  yield all([testSaga()]);\r\n}\r\n\r\nexport default saga;\r\n","import React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport \"./style.scss\";\r\n\r\nconst navButtons = [\r\n  {\r\n    name: \"Підбір ліків\",\r\n    link: \"getDrug\",\r\n  },\r\n  {\r\n    name: \"Ліки\",\r\n    link: \"allDrugs\",\r\n  },\r\n\r\n  {\r\n    name: \"Пацієнти\",\r\n    link: \"patients\",\r\n  },\r\n];\r\n\r\nconst Header = () => {\r\n  const isMobile = false;\r\n  return (\r\n    <div className=\"header\">\r\n      <div className={classnames(\"name\", { mobile: isMobile })}>HealInfo</div>\r\n      <div className=\"buttons\">\r\n        {navButtons.map(({ name, link }) => (\r\n          <a key={link} className=\"headerButton\" href={`#${link}`}>\r\n            {name}\r\n          </a>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport ChipInput from \"material-ui-chip-input\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst drugForm = [\r\n  { id: \"name\", name: \"Назва\" },\r\n  { id: \"activeSubstance\", name: \"Діюча речовина\" },\r\n  { id: \"grams\", name: \"Грам\" },\r\n];\r\n\r\nconst AllDrugs = (props) => {\r\n  const [data, setData] = useState({\r\n    name: \"\",\r\n    activeSubstance: \"\",\r\n    grams: \"\",\r\n    description: \"\",\r\n    specificsOfPatients: [],\r\n  });\r\n\r\n  const updateData = (newData, propName) =>\r\n    setData((prevData) => ({ ...prevData, [propName]: newData }));\r\n\r\n  const addNewSpecificData = () => {\r\n    const tmp = [...data.specificsOfPatients];\r\n    tmp.push({ name: \"\", grams: \"\", description: \"\" });\r\n    updateData(tmp, \"specificsOfPatients\");\r\n  };\r\n\r\n  const changeSpecificData = (idx, prop, newData) => {\r\n    const tmp = [...data.specificsOfPatients];\r\n    tmp[idx][prop] = newData;\r\n    updateData(tmp, \"specificsOfPatients\");\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      lg={12}\r\n      className=\"section allDrugs\"\r\n      id=\"allDrugs\"\r\n      justify=\"center\"\r\n    >\r\n      <Grid container lg={6} xs={12} className=\"drugForm\" justify=\"center\">\r\n        <Grid container md={8} justify=\"center\" className=\"content\">\r\n          {drugForm.map(({ id, name }) => (\r\n            <Grid item container xs={12} justify=\"center\">\r\n              <TextField\r\n                id=\"standard-basic\"\r\n                label={name}\r\n                value={data[id]}\r\n                onChange={(e) => updateData(e.target.value, id)}\r\n              />\r\n            </Grid>\r\n          ))}\r\n          <Grid item container xs={12} justify=\"center\">\r\n            <TextField\r\n              id=\"standard-basic\"\r\n              label=\"Опис\"\r\n              value={data.description}\r\n              multiline\r\n              rows={4}\r\n              onChange={(e) => updateData(e.target.value, \"description\")}\r\n            />\r\n          </Grid>\r\n          <Grid item container xs={12} justify=\"center\">\r\n            Особливості людини\r\n          </Grid>\r\n          <div className=\"addNewSpecific\" onClick={() => addNewSpecificData()}>\r\n            Додати особливість\r\n          </div>\r\n          {data.specificsOfPatients.map((data, idx) => (\r\n            <Grid item container xs={12} lg={12} key={idx}>\r\n              <Grid lg={4} xs={12}>\r\n                <TextField\r\n                  id=\"standard-basic\"\r\n                  label=\"Назва\"\r\n                  value={data.name}\r\n                  onChange={(e) =>\r\n                    changeSpecificData(idx, \"name\", e.target.value)\r\n                  }\r\n                />\r\n              </Grid>\r\n              <Grid lg={4} xs={12}>\r\n                <TextField\r\n                  id=\"standard-basic\"\r\n                  label=\"Грами\"\r\n                  value={data.grams}\r\n                  onChange={(e) =>\r\n                    changeSpecificData(idx, \"grams\", e.target.value)\r\n                  }\r\n                />\r\n              </Grid>\r\n              <Grid lg={4}>\r\n                <TextField\r\n                  id=\"standard-basic\"\r\n                  label=\"Опис\"\r\n                  value={data.description}\r\n                  multiline\r\n                  rows={4}\r\n                  onChange={(e) =>\r\n                    changeSpecificData(idx, \"description\", e.target.value)\r\n                  }\r\n                />\r\n              </Grid>\r\n              <div style={{ height: \"10px\" }}></div>\r\n            </Grid>\r\n          ))}\r\n          <Grid className=\"addNewSpecific\" lg={12}>\r\n            Додати\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container lg={6} xs={12}>\r\n        Table\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default AllDrugs;\r\n","import React, { useState } from \"react\";\r\nimport classnames from \"classnames\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport ChipInput from \"material-ui-chip-input\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst patientForm = [\r\n  { id: \"symptoms\", name: \"Симптоми\" },\r\n  { id: \"disease\", name: \"Хвороба\" },\r\n  { id: \"subDisease\", name: \"Супутні захворювання\" },\r\n  { id: \"specificsOfPatients\", name: \"Особливості пацієнта\" },\r\n];\r\n\r\nconst GetDrug = (props) => {\r\n  const [patient, setPatient] = useState({\r\n    number: 0,\r\n    symptoms: [],\r\n    disease: [],\r\n    subDisease: [],\r\n    specificsOfPatients: [],\r\n  });\r\n\r\n  const updatePatientData = (newData, propName) =>\r\n    setPatient((prevData) => ({ ...prevData, [propName]: newData }));\r\n\r\n  return (\r\n    <Grid container className=\"section getDrug\" id=\"getDrug\">\r\n      <Grid container className=\"setPatient\" lg={6} sm={12} justify=\"center\">\r\n        <Grid container item className=\"patientForm\" xs={8} justify=\"center\">\r\n          <Grid container item className=\"field\" xs={12} justify=\"center\">\r\n            <TextField\r\n              id=\"standard-basic\"\r\n              label=\"Номер пацієнта\"\r\n              type=\"number\"\r\n              value={patient.number}\r\n              onChange={(e) => updatePatientData(e.target.value, \"number\")}\r\n            />\r\n          </Grid>\r\n          {patientForm.map(({ id, name }) => (\r\n            <Grid\r\n              container\r\n              item\r\n              key={id}\r\n              className=\"field\"\r\n              xs={12}\r\n              justify=\"center\"\r\n            >\r\n              <ChipInput\r\n                label={name}\r\n                value={patient[id]}\r\n                onAdd={(chip) => {\r\n                  const tmp = [...patient[id]];\r\n                  tmp.push(chip);\r\n                  updatePatientData(tmp, id);\r\n                }}\r\n                onDelete={(chip) => {\r\n                  const tmp = patient[id].filter((data) => data !== chip);\r\n                  updatePatientData(tmp, id);\r\n                }}\r\n              />\r\n            </Grid>\r\n          ))}\r\n          <div className=\"submitPatient\">Отримати ліки</div>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container item lg={6} sm={12} className=\"foundDrugs\">\r\n        Drugs\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default GetDrug;\r\n","import React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport \"./styles.scss\";\r\n\r\nconst Patients = (props) => {\r\n  return (\r\n    <div className=\"section\" id=\"patients\">\r\n      Patients\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Patients;\r\n","import React, { useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { testRequest } from \"../../redux/actions/testActions\";\r\n\r\nimport { Header } from \"../../components\";\r\nimport AllDrugs from \"../allDrugs\";\r\nimport GetDrugs from \"../getDrugs\";\r\nimport Patients from \"../patients\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst Main = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const func = useCallback((data) => dispatch(testRequest(data)), []);\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <GetDrugs />\r\n      <AllDrugs />\r\n      <Patients />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from \"react\";\n\nimport { Main } from \"./pages\";\n\nconst App = () => {\n  return (\n    <>\n      <Main />\n    </>\n  );\n};\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport reducer from \"./redux/reducers\";\nimport saga from \"./redux/sagas\";\nimport App from \"./App\";\nimport \"./index.scss\";\n\nconst sageMiddleware = createSagaMiddleware();\nconst store = createStore(reducer, applyMiddleware(sageMiddleware));\nsageMiddleware.run(saga);\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}